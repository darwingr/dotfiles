# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l zsh"

# tmux with powerline
set -g default-terminal "screen-256color"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Tab & Window titles
set-window-option -g set-titles on

# Fixes for ssh-agent
set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

# current config:
# http://evertpot.com/osx-tmux-vim-copy-paste-clipboard/

# other option: (March 26, 2015)
#
#
# https://github.com/tmux-plugins/tmux-yank

# more tmux:
# https://github.com/minimul/dotfiles/blob/master/.tmux.conf
# http://minimul.com/increased-developer-productivity-with-tmux-part-1.html

###
# tmux config file ~/.tmux.conf
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
#set-option -g mouse-select-window on

# Enable powerline with homebrew python
source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

